---
- name: Creating a volume group and logical volume.
  hosts:  "{{ override_hosts | default('all') }}"
  become_method: sudo
  become_user: root
  become: true
  gather_facts: true

# ATTENTION:
# DiskManagement / FileSystem management is tricky with ansible.
# Therefore using booleans to create a few failsafe.
# Under 'vars' section only, set all 'true' flags to 'false' after using this playbook.

  vars:
    config_lvm: true
    create: true
    new_disk: '/dev/sdb'                                   # set to new disk being added to volume group
    new_mntp: '/example/mnt_point'                              # set to the desired mount point to be created and new logical volume to be mounted to
    create_vgname: 'vg_example'                               # set to volume group name to create
    create_lvname: 'lv_example'                               # set to logical volume name to create
    create_lvsize: '100%FREE'                               # set to logical volume size to create --- (10G) - would create new lvm with 10Gigabytes -- (512) - would create new lvm with 512m
    filesystem: 'xfs'                                      # set to filesystem type to format new logical volume with ( ext3, ext4, xfs, etc. )

  tasks:
    - name: installing lvm2
      yum: name=lvm2 state=present
      when: config_lvm and ansible_os_family == "RedHat"
      ignore_errors: true
      tags: check_lvm_is_installed

    - name: installing sg3_utils
      yum: name=sg3_utils state=present
      when: config_lvm and ansible_os_family == "RedHat"
      ignore_errors: true
      tags: check_utils_is_installed

    - name: rescanning for new disks
      command: /usr/bin/rescan-scsi-bus.sh
      when: config_lvm and ansible_os_family == "RedHat"
      tags: scan_for_new_disks

    - name: creating new LVM volume group
      lvg: vg={{ create_vgname }} pvs={{ new_disk }} state=present
      when: create and config_lvm
      tags: create_a_new_vol_group

    - name: creating new LVM logical volume
      lvol: vg={{ create_vgname }} lv={{ create_lvname }} size={{ create_lvsize }}
      when: create and config_lvm
      tags: create_a_new_logical_vol

    - name: creating new filesystem on new LVM logical volume
      filesystem: fstype={{ filesystem }} dev=/dev/{{ create_vgname }}/{{ create_lvname }}
      when: create and config_lvm
      tags: create_fs_on_new_logical_vol

    - name: mounting new filesystem
      mount: name={{ new_mntp }} src=/dev/{{ create_vgname }}/{{ create_lvname }} fstype={{ filesystem }} state=mounted
      when: create and config_lvm
      tags: mount__new_logical_vol

...
