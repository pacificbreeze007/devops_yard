---
- name: Resizing an existing volume group and logical volume.
  hosts:  "{{ override_hosts | default('all') }}"
  become_method: sudo
  become_user: root
  become: true
  gather_facts: true

  # ATTENTION:
  # DiskManagement / FileSystem management is tricky with ansible.
  # Therefore using booleans to create a few failsafe.
  # Under 'vars' section only, set all 'true' flags to 'false' after using this playbook.

  vars:
    config_lvm: true
    resize: true
    extend: true
    current_disk: '/dev/sda5'                               # set to your current disk device already setup in lvm
    new_disk: '/dev/sdb'                                    # set to new disk being added to volume group
    resize_vgname: 'vg_example'                                # set to volume group name to resize
    extend_vgname: 'vg_example'                                # set to volume group name to extend
    resize_lvname: 'lv_example'                                # set to logical volume name to resize
    extend_lvname: 'lv_example'                                # set to logical volume name to extend
    extend_disks: '{{ current_disk }},{{ new_disk }}'       # first disk is current volume group
    lvextend_options: '-L+10G'                              # setting the options to pass to lvextend --- ('-L+10G') - would increase by 10GB whereas ('-l +100%FREE') would increase to full capacity

  tasks:
    - name: installing lvm2
      yum: name=lvm2 state=present
      when: config_lvm and ansible_os_family == "RedHat"
      ignore_errors: true
      tags: check_lvm_is_installed

    - name: installing sg3_utils
      yum: name=sg3_utils state=present
      when: config_lvm and ansible_os_family == "RedHat"
      ignore_errors: true
      tags: check_utils_is_installed

    - name: rescanning for new disks
      command: /usr/bin/rescan-scsi-bus.sh
      when: config_lvm and ansible_os_family == "RedHat"
      tags: scan_for_new_disks

    - name: extending existing LVM volume group
      lvg: vg={{ extend_vgname }} pvs={{ extend_disks }}
      when: extend and config_lvm
      tags: extend_existing_vol_group

    - name: extending existing filesystem
      command: lvextend {{ lvextend_options }} /dev/{{ extend_vgname }}/{{ extend_lvname }}
      when: extend and config_lvm
      tags: extend_existing_logical_volume

    - name: resizing filesystem
      command: resize2fs /dev/{{ resize_vgname }}/{{ resize_lvname }}
      when: resize and config_lvm
      tags: resize_online

...
