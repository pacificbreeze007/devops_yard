---
- name: Add a new user on Linux/UNIX Systems.
  hosts: "{{ override_hosts | default('GC_SERVERS') }}"
  become_user: root
  become_method: sudo
  become: true

  environment:
    PATH: '/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin'


  vars:
    user_attributes:
    # MUST BE PREPOPULATED. This is the only block that needs to be edited.
    # Check group name and GID beforehand to avoid conflicts.
    # Check if user UID is not already used.
      group_name: testgrp
      group_gid: 1081
      user_name: testuser
      user_uid: 1085
      user_shell: /bin/bash
      comment_about_user: This is a random test user.
      user_password: somerand0m$$w0rd
      user_pub_key: ""
    #- user_pub_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC44oH+G/uZBo6Hu0Mg9sEEV+nHin9uthebboSCrhLkjAFcM7WLHpammWigjrOQLdLSH8xISX9OZLjcyM66fSIdErGN4ko9u7lx4KLR1C0iWpG4LbpPNj753vCTTzS3uTXMhD+lm+UD55awykSnYHYHQnUISgRFKwA6wi3wWvl9mCgqqfBKECiFcyweCCLMzuuQDDx3u/MOp01R6PW/pAifWndkRWR0RUW8bx4gpiRLP+LAPlHQ3P0Pj5/HOn6vsZTQfvcjmWLH1gPLau9sd2pLfyJrGeuFvwfeYpsHkvHdu9B0OW/xI0v28yE+e0Wa9ah2yUhSmsEKP6MzNNdpW+DP"

    # THE FOLLOWING CODE BODY NEED NOT BE MODIFIED ALL THE TIME.
  tasks:
    - name: Create the group that the new user will below to, if it doesn't exist.
      group:
        name: "{{user_attributes.group_name}}"
        gid: "{{user_attributes.group_gid}}"
      become: true
      ignore_errors: true
      tags: add_new_group

    - name: Add a new user on Linux Systems.
      user:
        name: "{{ user_attributes.user_name }}"
        group: "{{ user_attributes.group_name }}"
        uid: "{{ user_attributes.user_uid | default(omit) }}"
        comment: "{{ user_attributes.comment_about_user | default('') }}"
        shell: "{{ user_attributes.user_shell | default('/bin/bash') }}"
        password: "{{ user_attributes.user_password | password_hash('sha512') }}"
        state: present
      tags: add_new_user

    - name: Force password change upon first login.
      command: chage -d 0 "{{user_attributes.user_name}}"
      become: true
      tags: password_update_at_first_login

    - name: Reset pam_tally2 for the "{{user_attributes.user_name}}"
      command: pam_tally2 -u "{{user_attributes.user_name}}" -r
      become: true
      tags: reset_pam_tally

    - name: Set authorized public keys for the user if any.
      authorized_key:
        user: "{{user_attributes.user_name}}"
        key: "{{user_attributes.user_pub_key}}"
        state: present
      become: true
      ignore_errors: true
      tags: update_authorized_keys
...
